<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">
	<display-name>Archetype Created Web Application</display-name>

	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<!-- 登录过滤器 -->
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>loadOnfilter</filter-name>
		<filter-class>com.treasure.filter.LoadOnFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>loadOnfilter</filter-name>
		<!-- 只拦截以.do 结尾的请求, 以方便放行静态文件和特殊请求 -->
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	<!-- 给登录过滤器中注入loginService -->
	<filter>
		<filter-name>insertService</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetBeanName</param-name>
			<param-value>loadOnFilter</param-value>
		</init-param>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>insertService</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>

	<!-- 监听session创建摧毁事件 -->
	<listener>
		<listener-class>com.treasure.listenner.MySessionListener</listener-class>
	</listener>
	<!-- 加载上下文 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 用于在普通类中获取session -->
	<!-- <listener> <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class> 
		</listener> -->

	<!-- 加载log4j的配置文件log4j.properties -->
	<!-- <context-param> <param-name>log4jConfigLocation</param-name> <param-value>/log4j.properties</param-value> 
		</context-param> -->
	<!-- 加载Spring框架中的log4j监听器Log4jConfigListener -->
	<!-- <listener> <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class> 
		</listener> -->

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>

	<servlet>
		<servlet-name>SpringMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>
	<servlet-mapping>
		<servlet-name>SpringMVC</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>/index.jsp</welcome-file>
	</welcome-file-list>
</web-app>